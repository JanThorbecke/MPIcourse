%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /cray/css/u19/jan/src/3DFD/getWaveletHeaders.c
Compiled : 2015-09-11  08:11:50
Compiler : Version 8.4.0.223
Ftnlx    : Version 8412 (libcif 84005)
Target   : x86-64
Command  : driver.cc -h cpu=haswell -h dynamic -D __CRAYCS -D __CRAY_HASWELL
           -D __CRAYXT_COMPUTE_LINUX_TARGET -O 3 -h fp3 -h noomp -h list=a -I .
           -c getWaveletHeaders.c
           -W l,--rpath=/opt/cray/cce/8.4.0.223/craylibs/x86-64
           -ibase-compiler /opt/cray/cce/8.4.0.223/CC/x86-64/compiler_include_ba
           se -isystem /opt/cray/cce/8.4.0.223/craylibs/x86-64/include
           -isystem /usr/local/cuda/include
           -I /opt/gcc/4.8.1/snos/lib/gcc/x86_64-suse-linux/4.8.1/include
           -I /opt/gcc/4.8.1/snos/lib/gcc/x86_64-suse-linux/4.8.1/include-fixed
           -I /opt/cray/mvapich2_slurm/2.0.1.4/CRAY/8.4/include
           -I /opt/cray/libsci/13.2.0.1/CRAY/8.3/x86_64/include
           -I /global/opt/nvidia/cudatoolkit/7.0.28/include
           -I /opt/cray/cce/8.4.0.223/craylibs/x86-64/include

clx report
------------
Source   : /cray/css/u19/jan/src/3DFD/getWaveletHeaders.c
Date     : 09/11/2015  08:11:51


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          O p t i o n s   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Options :  -h cache2,fp3,scalar3,thread2,vector3,mpi0,ipa3,noaggress         
           -h autoprefetch,noautothread,fusion2,nomsgs,nonegmsgs         
           -h nooverindex,pattern,unroll2,nozeroinc         
           -h noadd_paren,noupc,dwarf,nofp_trap,nofunc_trace         
           -h noomp_analyze,noomp_trace,nopat_trace         
           -h noomp,noomp_acc,noacc         
           -h c99,noexceptions,nostrict,noinfinitevl         
           -h notolerant,gnu         
           -h flex_mp=default         
           -h cpu=x86-64,haswell
           -h network=gemini         
           -K trap=none 


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     %%%    L o o p m a r k   L e g e n d    %%%

     Primary Loop Type        Modifiers
     ------- ---- ----        ---------
     A - Pattern matched      a - atomic memory operation
                              b - blocked
     C - Collapsed            c - conditional and/or computed
     D - Deleted               
     E - Cloned                
     F - Flat - No calls      f - fused
     G - Accelerated          g - partitioned
     I - Inlined              i - interchanged
     M - Multithreaded        m - partitioned
                              n - non-blocking remote transfer
                              p - partial
                              r - unrolled
                              s - shortloop
     V - Vectorized           w - unwound

     + - More messages listed at end of listing
     ------------------------------------------


    1.         #include <assert.h>
    2.         #include <stdio.h>
    3.         #include <stdlib.h>
    4.         #include <errno.h>
    5.         #include <math.h>
    6.         #include "segy.h"
    7.         
    8.         /**
    9.         *  reads file which contain the source wavelets and reads receiver positions  
   10.         *
   11.         *   AUTHOR:
   12.         *           Jan Thorbecke (janth@xs4all.nl)
   13.         *           The Netherlands 
   14.         **/
   15.         
   16.         int getWaveletHeaders(char *file_src, int n1, int n2, float *gx, float *sx, float *gelev, float *selev, int verbose)
   17.         {
   18.             FILE   *fp;
   19.             size_t nread;
   20.             int   ix;
   21.         	off_t offset, ret, trace_sz, ntraces;
   22.             float *trace;
   23.         	float scl, scll;
   24.             segy hdr;
   25.             
   26.             if (file_src == NULL) return 0; /* Input pipe can not be handled */
   27.  +          else fp = fopen( file_src, "r" );
   28.  +          assert( fp != NULL);
   29.  +          nread = fread( &hdr, 1, TRCBYTES, fp );
   30.  +          assert(nread == TRCBYTES);
   31.         	if (hdr.scalco < 0) scl = 1.0/fabs(hdr.scalco);
   32.         	else if (hdr.scalco == 0) scl = 1.0;
   33.         	else scl = hdr.scalco;
   34.         	if (hdr.scalel < 0) scll = 1.0/fabs(hdr.scalel);
   35.         	else if (hdr.scalel == 0) scll = 1.0;
   36.         	else scll = hdr.scalel;
   37.             trace_sz = sizeof(float)*(n1)+TRCBYTES;
   38.         
   39.  + 1--< 	for (ix=0; ix<n2; ix++) {
   40.    1    		offset = ix*trace_sz;
   41.  + 1        	fseeko( fp, offset, SEEK_SET );
   42.  + 1        	nread = fread( &hdr, 1, TRCBYTES, fp );
   43.  + 1        	assert(nread == TRCBYTES);
   44.    1    		gx[ix] = hdr.gx*scl;
   45.    1            sx[ix] = hdr.sx*scl;
   46.    1            gelev[ix] = -1.0*hdr.gelev*scll;
   47.    1    		selev[ix] = -1.0*hdr.selev*scll;
   48.    1--> 	}
   49.  +          fclose(fp);
   50.             return 0;
   51.         }
   52.         

CC-3021 CC: IPA File = getWaveletHeaders.c, Line = 27 
  "fopen" (called from "getWaveletHeaders") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = getWaveletHeaders.c, Line = 28 
  "__assert_fail" (called from "getWaveletHeaders") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = getWaveletHeaders.c, Line = 29 
  "fread" (called from "getWaveletHeaders") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = getWaveletHeaders.c, Line = 30 
  "__assert_fail" (called from "getWaveletHeaders") was not inlined because the compiler was unable to locate the routine.

CC-6287 CC: VECTOR File = getWaveletHeaders.c, Line = 39 
  A loop was not vectorized because it contains a call to function "fseeko" on line 41.

CC-3021 CC: IPA File = getWaveletHeaders.c, Line = 41 
  "fseeko" (called from "getWaveletHeaders") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = getWaveletHeaders.c, Line = 42 
  "fread" (called from "getWaveletHeaders") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = getWaveletHeaders.c, Line = 43 
  "__assert_fail" (called from "getWaveletHeaders") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = getWaveletHeaders.c, Line = 49 
  "fclose" (called from "getWaveletHeaders") was not inlined because the compiler was unable to locate the routine.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
