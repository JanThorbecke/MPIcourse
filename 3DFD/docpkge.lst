%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /cray/css/u19/jan/src/3DFD/docpkge.c
Compiled : 2015-09-11  08:11:52
Compiler : Version 8.4.0.223
Ftnlx    : Version 8412 (libcif 84005)
Target   : x86-64
Command  : driver.cc -h cpu=haswell -h dynamic -D __CRAYCS -D __CRAY_HASWELL
           -D __CRAYXT_COMPUTE_LINUX_TARGET -O 3 -h fp3 -h noomp -h list=a -I .
           -c docpkge.c -W l,--rpath=/opt/cray/cce/8.4.0.223/craylibs/x86-64
           -ibase-compiler /opt/cray/cce/8.4.0.223/CC/x86-64/compiler_include_ba
           se -isystem /opt/cray/cce/8.4.0.223/craylibs/x86-64/include
           -isystem /usr/local/cuda/include
           -I /opt/gcc/4.8.1/snos/lib/gcc/x86_64-suse-linux/4.8.1/include
           -I /opt/gcc/4.8.1/snos/lib/gcc/x86_64-suse-linux/4.8.1/include-fixed
           -I /opt/cray/mvapich2_slurm/2.0.1.4/CRAY/8.4/include
           -I /opt/cray/libsci/13.2.0.1/CRAY/8.3/x86_64/include
           -I /global/opt/nvidia/cudatoolkit/7.0.28/include
           -I /opt/cray/cce/8.4.0.223/craylibs/x86-64/include

clx report
------------
Source   : /cray/css/u19/jan/src/3DFD/docpkge.c
Date     : 09/11/2015  08:11:52


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          O p t i o n s   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Options :  -h cache2,fp3,scalar3,thread2,vector3,mpi0,ipa3,noaggress         
           -h autoprefetch,noautothread,fusion2,nomsgs,nonegmsgs         
           -h nooverindex,pattern,unroll2,nozeroinc         
           -h noadd_paren,noupc,dwarf,nofp_trap,nofunc_trace         
           -h noomp_analyze,noomp_trace,nopat_trace         
           -h noomp,noomp_acc,noacc         
           -h c99,noexceptions,nostrict,noinfinitevl         
           -h notolerant,gnu         
           -h flex_mp=default         
           -h cpu=x86-64,haswell
           -h network=gemini         
           -K trap=none 


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     %%%    L o o p m a r k   L e g e n d    %%%

     Primary Loop Type        Modifiers
     ------- ---- ----        ---------
     A - Pattern matched      a - atomic memory operation
                              b - blocked
     C - Collapsed            c - conditional and/or computed
     D - Deleted               
     E - Cloned                
     F - Flat - No calls      f - fused
     G - Accelerated          g - partitioned
     I - Inlined              i - interchanged
     M - Multithreaded        m - partitioned
                              n - non-blocking remote transfer
                              p - partial
                              r - unrolled
                              s - shortloop
     V - Vectorized           w - unwound

     + - More messages listed at end of listing
     ------------------------------------------


    1.          /*                 
    2.           This file is property of the Colorado School of Mines.
    3.           
    4.           Copyright (C) 2007, Colorado School of Mines,
    5.           All rights reserved.
    6.           
    7.           
    8.           Redistribution and use in source and binary forms, with or 
    9.           without modification, are permitted provided that the following 
   10.           conditions are met:
   11.           
   12.           *  Redistributions of source code must retain the above copyright 
   13.           notice, this list of conditions and the following disclaimer.
   14.           *  Redistributions in binary form must reproduce the above 
   15.           copyright notice, this list of conditions and the following 
   16.           disclaimer in the documentation and/or other materials provided 
   17.           with the distribution.
   18.           *  Neither the name of the Colorado School of Mines nor the names of
   19.           its contributors may be used to endorse or promote products 
   20.           derived from this software without specific prior written permission.
   21.           
   22.           Warranty Disclaimer:
   23.           THIS SOFTWARE IS PROVIDED BY THE COLORADO SCHOOL OF MINES AND CONTRIBUTORS 
   24.           "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
   25.           LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
   26.           FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
   27.           COLORADO SCHOOL OF MINES OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
   28.           INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
   29.           BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
   30.           LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
   31.           CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
   32.           STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING 
   33.           IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
   34.           POSSIBILITY OF SUCH DAMAGE.
   35.           
   36.           
   37.           Export Restriction Disclaimer:
   38.           We believe that CWP/SU: Seismic Un*x is a low technology product that does
   39.           not appear on the Department of Commerce CCL list of restricted exports.
   40.           Accordingly, we believe that our product meets the qualifications of
   41.           an ECCN (export control classification number) of EAR99 and we believe
   42.           it fits the qualifications of NRR (no restrictions required), and
   43.           is thus not subject to export restrictions of any variety.
   44.           
   45.           Approved Reference Format:
   46.           In publications, please refer to SU as per the following example:
   47.           Cohen, J. K. and Stockwell, Jr. J. W., (200_), CWP/SU: Seismic Un*x 
   48.           Release No. __: an open source software  package for seismic 
   49.           research and processing, 
   50.           Center for Wave Phenomena, Colorado School of Mines.
   51.           
   52.           Articles about SU in peer-reviewed journals:
   53.           Saeki, T., (1999), A guide to Seismic Un*x (SU)(2)---examples of data processing (part 1), data input and preparation of headers, Butsuri-Tansa (Geophysical Exploration), vol. 52, no. 5, 465-477.
   54.           Stockwell, Jr. J. W. (1999), The CWP/SU: Seismic Un*x Package, Computers and Geosciences, May 1999.
   55.           Stockwell, Jr. J. W. (1997), Free Software in Education: A case study of CWP/SU: Seismic Un*x, The Leading Edge, July 1997.
   56.           Templeton, M. E., Gough, C.A., (1998), Web Seismic Un*x: Making seismic reflection processing more accessible, Computers and Geosciences.
   57.           
   58.           Acknowledgements:
   59.           SU stands for CWP/SU:Seismic Un*x, a processing line developed at Colorado 
   60.           School of Mines, partially based on Stanford Exploration Project (SEP) 
   61.           software.
   62.           */
   63.          
   64.          /*********************** self documentation **********************/
   65.          /*************************************************************************** 
   66.          DOCPKGE - Function to implement the CWP self-documentation facility
   67.          
   68.          requestdoc	give selfdoc on user request (i.e. when name of main is typed)
   69.          pagedoc		print self documentation string
   70.          
   71.          **************************************************************************** 
   72.          Function Prototypes:
   73.          void requestdoc(flag);
   74.          void pagedoc();
   75.          
   76.          **************************************************************************** 
   77.          requestoc:
   78.          Input:
   79.          flag		integer specifying i.o. cases
   80.          
   81.          pagedoc():
   82.          Returns:	the self-documentation, an array of strings
   83.          
   84.          **************************************************************************** 
   85.          Notes:
   86.          requestdoc:
   87.          In the usual case, stdin is used to pass in data.  However,
   88.          some programs (eg. synthetic data generators) don't use stdin
   89.          to pass in data and some programs require two or more arguments
   90.          besides the command itself (eg. sudiff) and don't use stdin.
   91.          In this last case, we give selfdoc whenever too few arguments
   92.          are given, since these usages violate the usual SU syntax.
   93.          In all cases, selfdoc can be requested by giving only the
   94.          program name.
   95.          
   96.          The flag argument distinguishes these cases:
   97.                      flag = 0; fully defaulted, no stdin
   98.                      flag = 1; usual case
   99.                      flag = n > 1; no stdin and n extra args required
  100.          
  101.          pagedoc:
  102.          Intended to be called by requesdoc(), but conceivably could be
  103.          used directly as in:
  104.                if (xargc != 3) selfdoc();
  105.          
  106.          Based on earlier versions by:
  107.          SEP: Einar Kjartansson, Stew Levin CWP: Jack Cohen, Shuki Ronen
  108.          HRC: Lyle
  109.          
  110.          **************************************************************************** 
  111.          Author: Jack K. Cohen, Center for Wave Phenomena
  112.          ****************************************************************************/
  113.          /**************** end self doc ********************************/
  114.          
  115.          #include "par.h"
  116.          
  117.          #ifndef EXIT_FAILURE
  118.          #define EXIT_FAILURE (1)
  119.          #endif
  120.          #ifndef EXIT_SUCCESS
  121.          #define EXIT_SUCCESS (0)
  122.          #endif
  123.          
  124.           
  125.          /*  definitions of global variables */
  126.          int xargc; char **xargv;
  127.          
  128.          
  129.          void requestdoc(int flag)
  130.          /*************************************************************************** 
  131.          print selfdocumentation as directed by the user-specified flag
  132.          **************************************************************************** 
  133.          Notes:
  134.          In the usual case, stdin is used to pass in data.  However,
  135.          some programs (eg. synthetic data generators) don't use stdin
  136.          to pass in data and some programs require two or more arguments
  137.          besides the command itself (eg. sudiff) and don't use stdin.
  138.          In this last case, we give selfdoc whenever too few arguments
  139.          are given, since these usages violate the usual SU syntax.
  140.          In all cases, selfdoc can be requested by giving only the
  141.          program name.
  142.          
  143.          The flag argument distinguishes these cases:
  144.                      flag = 0; fully defaulted, no stdin
  145.                      flag = 1; usual case
  146.                      flag = n > 1; no stdin and n extra args required
  147.          
  148.          pagedoc:
  149.          Intended to be called by pagedoc(), but conceivably could be
  150.          used directly as in:
  151.                if (xargc != 3) selfdoc();
  152.          
  153.          **************************************************************************** 
  154.          Authors: Jack Cohen, Center for Wave Phenomena, 1993, based on on earlier
  155.          versions by:
  156.          SEP: Einar Kjartansson, Stew Levin CWP: Jack Cohen, Shuki Ronen
  157.          HRC: Lyle
  158.          ****************************************************************************/
  159.          {
  160.                  switch(flag) {
  161.                  case 1:
  162.  +                       if (xargc == 1 && isatty(STDIN)) pagedoc();
  163.                  break;
  164.                  case 0:
  165.  +                       if (xargc == 1 && isatty(STDIN) && isatty(STDOUT)) pagedoc();
  166.                  break;
  167.                  default:
  168.  +                       if (xargc <= flag) pagedoc();
  169.                  break;
  170.                  }
  171.                  return;
  172.          }
  173.          
  174.          
  175.          void pagedoc(void)
  176.          {
  177.                  extern char *sdoc[];
  178.          	char **p = sdoc;
  179.                  FILE *fp;
  180.          
  181.  +               fflush(stdout);
  182.  +               fp = popen("more -22 1>&2", "w");
  183.  + F--<> 	while(*p) (void)fprintf(fp, "%s\n", *p++);
  184.  +               pclose(fp);
  185.          
  186.  +               exit(EXIT_FAILURE);
  187.          }
  188.          /*----------------------End of Package--------------------------------*/

CC-3021 CC: IPA File = docpkge.c, Line = 162 
  "isatty" (called from "requestdoc") was not inlined because the compiler was unable to locate the routine.

CC-3118 CC: IPA File = docpkge.c, Line = 162 
  "pagedoc" (called from "requestdoc") was not inlined because the call site will not flatten.  "exit" is missing.

CC-3021 CC: IPA File = docpkge.c, Line = 165 
  "isatty" (called from "requestdoc") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = docpkge.c, Line = 165 
  "isatty" (called from "requestdoc") was not inlined because the compiler was unable to locate the routine.

CC-3118 CC: IPA File = docpkge.c, Line = 165 
  "pagedoc" (called from "requestdoc") was not inlined because the call site will not flatten.  "exit" is missing.

CC-3118 CC: IPA File = docpkge.c, Line = 168 
  "pagedoc" (called from "requestdoc") was not inlined because the call site will not flatten.  "exit" is missing.

CC-3021 CC: IPA File = docpkge.c, Line = 181 
  "fflush" (called from "pagedoc") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = docpkge.c, Line = 182 
  "popen" (called from "pagedoc") was not inlined because the compiler was unable to locate the routine.

CC-6287 CC: VECTOR File = docpkge.c, Line = 183 
  A loop was not vectorized because it contains a call to function "fprintf" on line 183.

CC-3182 CC: IPA File = docpkge.c, Line = 183 
  Loop has been flattened.

CC-3021 CC: IPA File = docpkge.c, Line = 184 
  "pclose" (called from "pagedoc") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = docpkge.c, Line = 186 
  "exit" (called from "pagedoc") was not inlined because the compiler was unable to locate the routine.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
