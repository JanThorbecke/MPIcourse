Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: rc1_fft(float *, complex *, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at lib_fft.c(345,3) inlined into lib_fft.c(69,8)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(345,3) inlined into lib_fft.c(69,8)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at lib_fft.c(353,2) inlined into lib_fft.c(69,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 357 and  line 361

   LOOP BEGIN at lib_fft.c(355,3) inlined into lib_fft.c(69,8)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at lib_fft.c(75,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at lib_fft.c(75,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(75,3)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at lib_fft.c(75,3)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(75,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at lib_fft.c(78,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at lib_fft.c(78,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(78,3)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(78,3)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: rcm_fft(float *, complex *, int, int, int, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at lib_fft.c(102,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at lib_fft.c(108,4)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lib_fft.c(345,3) inlined into lib_fft.c(109,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(345,3) inlined into lib_fft.c(109,5)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at lib_fft.c(353,2) inlined into lib_fft.c(109,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between  line 357 and  line 361

      LOOP BEGIN at lib_fft.c(355,3) inlined into lib_fft.c(109,5)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lib_fft.c(117,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lib_fft.c(118,4)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at lib_fft.c(118,4)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(118,4)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at lib_fft.c(118,4)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(118,4)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at lib_fft.c(121,4)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at lib_fft.c(121,4)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(121,4)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(121,4)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: cr1_fft(complex *, float *, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at lib_fft.c(378,3) inlined into lib_fft.c(142,8)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(378,3) inlined into lib_fft.c(142,8)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at lib_fft.c(389,2) inlined into lib_fft.c(142,8)
   remark #15301: OUTER LOOP WAS VECTORIZED

   LOOP BEGIN at lib_fft.c(392,3) inlined into lib_fft.c(142,8)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at lib_fft.c(389,2) inlined into lib_fft.c(142,8)
<Remainder loop for vectorization>

   LOOP BEGIN at lib_fft.c(392,3) inlined into lib_fft.c(142,8)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

LOOP BEGIN at lib_fft.c(148,3)
<Peeled loop for vectorization, Multiversioned v1, Distributed chunk1>
LOOP END

LOOP BEGIN at lib_fft.c(148,3)
<Multiversioned v1, Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(148,3)
<Remainder loop for vectorization, Multiversioned v1, Distributed chunk1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(148,3)
<Remainder loop for vectorization, Multiversioned v1, Distributed chunk1>
LOOP END

LOOP BEGIN at lib_fft.c(148,3)
<Multiversioned v1, Distributed chunk2>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(148,3)
<Remainder loop for vectorization, Multiversioned v1, Distributed chunk2>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(148,3)
<Remainder loop for vectorization, Multiversioned v1, Distributed chunk2>
LOOP END

LOOP BEGIN at lib_fft.c(148,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at lib_fft.c(148,3)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at lib_fft.c(157,4)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at lib_fft.c(157,4)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(157,4)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at lib_fft.c(157,4)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(157,4)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at lib_fft.c(160,4)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(160,4)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(160,4)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: crm_fft(complex *, float *, int, int, int, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at lib_fft.c(181,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at lib_fft.c(187,4)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lib_fft.c(378,3) inlined into lib_fft.c(188,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(378,3) inlined into lib_fft.c(188,5)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at lib_fft.c(389,2) inlined into lib_fft.c(188,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

      LOOP BEGIN at lib_fft.c(392,3) inlined into lib_fft.c(188,5)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lib_fft.c(196,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lib_fft.c(197,4)
   <Peeled loop for vectorization, Multiversioned v1, Distributed chunk1>
   LOOP END

   LOOP BEGIN at lib_fft.c(197,4)
   <Multiversioned v1, Distributed chunk1>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(197,4)
   <Remainder loop for vectorization, Multiversioned v1, Distributed chunk1>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(197,4)
   <Remainder loop for vectorization, Multiversioned v1, Distributed chunk1>
   LOOP END

   LOOP BEGIN at lib_fft.c(197,4)
   <Multiversioned v1, Distributed chunk2>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(197,4)
   <Remainder loop for vectorization, Multiversioned v1, Distributed chunk2>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(197,4)
   <Remainder loop for vectorization, Multiversioned v1, Distributed chunk2>
   LOOP END

   LOOP BEGIN at lib_fft.c(197,4)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at lib_fft.c(197,4)
   <Remainder, Multiversioned v2>
   LOOP END

   LOOP BEGIN at lib_fft.c(206,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at lib_fft.c(206,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(206,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at lib_fft.c(206,5)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(206,5)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at lib_fft.c(209,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(209,5)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(209,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: cc1_fft(complex *, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at lib_fft.c(308,3) inlined into lib_fft.c(228,8)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(308,3) inlined into lib_fft.c(228,8)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at lib_fft.c(317,2) inlined into lib_fft.c(228,8)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at lib_fft.c(319,3) inlined into lib_fft.c(228,8)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at lib_fft.c(317,2) inlined into lib_fft.c(228,8)
<Remainder>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at lib_fft.c(319,3) inlined into lib_fft.c(228,8)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at lib_fft.c(328,2) inlined into lib_fft.c(228,8)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at lib_fft.c(328,2) inlined into lib_fft.c(228,8)
<Remainder>
LOOP END

LOOP BEGIN at lib_fft.c(236,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at lib_fft.c(236,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(236,3)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at lib_fft.c(236,3)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(236,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at lib_fft.c(244,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at lib_fft.c(244,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(244,3)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at lib_fft.c(244,3)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(244,3)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: ccm_fft(complex *, int, int, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at lib_fft.c(264,4)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lib_fft.c(308,3) inlined into lib_fft.c(264,29)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(308,3) inlined into lib_fft.c(264,29)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at lib_fft.c(317,2) inlined into lib_fft.c(264,29)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

      LOOP BEGIN at lib_fft.c(319,3) inlined into lib_fft.c(264,29)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      LOOP END
   LOOP END

   LOOP BEGIN at lib_fft.c(317,2) inlined into lib_fft.c(264,29)
   <Remainder>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

      LOOP BEGIN at lib_fft.c(319,3) inlined into lib_fft.c(264,29)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      LOOP END
   LOOP END

   LOOP BEGIN at lib_fft.c(328,2) inlined into lib_fft.c(264,29)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at lib_fft.c(328,2) inlined into lib_fft.c(264,29)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at lib_fft.c(273,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lib_fft.c(274,4)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at lib_fft.c(274,4)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(274,4)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at lib_fft.c(274,4)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(274,4)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at lib_fft.c(282,4)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at lib_fft.c(282,4)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(282,4)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at lib_fft.c(282,4)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at lib_fft.c(282,4)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: ccdft(complex *, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at lib_fft.c(308,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(308,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at lib_fft.c(317,2)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at lib_fft.c(319,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at lib_fft.c(317,2)
<Remainder>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at lib_fft.c(319,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at lib_fft.c(328,2)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at lib_fft.c(328,2)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: rcdft(float *, complex *, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at lib_fft.c(345,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(345,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at lib_fft.c(353,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 357 and  line 361

   LOOP BEGIN at lib_fft.c(355,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: crdft(complex *, float *, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at lib_fft.c(378,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lib_fft.c(378,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at lib_fft.c(389,2)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at lib_fft.c(392,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at lib_fft.c(389,2)
<Remainder>
   remark #15301: OUTER LOOP WAS VECTORIZED

   LOOP BEGIN at lib_fft.c(392,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at lib_fft.c(389,2)
<Remainder loop for vectorization>

   LOOP BEGIN at lib_fft.c(392,3)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END
===========================================================================
